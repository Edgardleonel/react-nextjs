{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\n\nfunction Header(_ref) {\n  var posts = _ref.posts;\n  return __jsx(React.Fragment, null, __jsx(\"h1\", null, \"Headers\"), posts.map(function (repo) {\n    return __jsx(\"h1\", {\n      key: repo.id\n    }, repo.name);\n  }));\n}\n\n_c = Header;\nHeader.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var news, res;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return fetch(\"https://api.github.com/orgs/rocketseat/repos\");\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return res.json();\n\n        case 6:\n          news = _context.sent;\n          console.log(news);\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(\"ERROR\", _context.t0);\n          news = [];\n\n        case 14:\n          return _context.abrupt(\"return\", {\n            posts: news\n          });\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, null, [[0, 10]]);\n}));\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/Danielle/Desktop/react-next/pages/Produto/index.js"],"names":["React","useState","useEffect","Header","posts","map","repo","id","name","getInitialProps","fetch","res","json","news","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAEA,SAASC,MAAT,OAAyB;AAAA,MAARC,KAAQ,QAARA,KAAQ;AAEvB,SACE,4BACE,4BADF,EAEGA,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI;AAAA,WACX;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC;AAAd,OAAmBD,IAAI,CAACE,IAAxB,CADW;AAAA,GAAd,CAFH,CADF;AASC;;KAXML,M;AAaPA,MAAM,CAACM,eAAP,yEAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAGDC,KAAK,gDAHJ;;AAAA;AAGbC,UAAAA,GAHa;AAAA;AAAA,iBAMNA,GAAG,CAACC,IAAJ,EANM;;AAAA;AAMnBC,UAAAA,IANmB;AAOnBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAPmB;AAAA;;AAAA;AAAA;AAAA;AASnBC,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAF,UAAAA,IAAI,GAAG,EAAP;;AAVmB;AAAA,2CAYhB;AACHT,YAAAA,KAAK,EAAES;AADJ,WAZgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;AAiBE,eAAeV,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nfunction Header({posts}) {\r\n   \r\n  return (\r\n    <>\r\n      <h1>Headers</h1>\r\n      {posts.map(repo => (\r\n          <h1 key={repo.id}>{repo.name}</h1>\r\n        ))}\r\n    </>\r\n    \r\n  );\r\n  }\r\n  \r\n  Header.getInitialProps = async () => {\r\n    let news;\r\n    try {\r\n        const res = await fetch(\r\n            `https://api.github.com/orgs/rocketseat/repos`\r\n        );\r\n        news = await res.json();\r\n        console.log(news);\r\n    } catch (err) {\r\n        console.log(\"ERROR\", err);\r\n        news = [];\r\n    }\r\n    return {\r\n        posts: news\r\n    };\r\n  };\r\n  \r\n    export default Header;"]},"metadata":{},"sourceType":"module"}