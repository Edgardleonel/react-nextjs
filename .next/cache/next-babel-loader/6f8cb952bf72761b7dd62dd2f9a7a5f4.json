{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\n\nfunction Home() {\n  _s();\n\n  var _useState = useState([]),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  function handleTopo() {\n    if (window.scrollY > 200) {\n      console.log('open');\n    } else {\n      console.log('close');\n    }\n  }\n\n  useEffect(function () {\n    window.addEventListener('scroll', handleTopo());\n    return function () {\n      console.log('unMount');\n      window.removeEventListener('scroll');\n    };\n  }, []);\n  useEffect(function () {}, []);\n\n  var fetchAPI = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"https://api.github.com/orgs/rocketseat/repos\");\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.json();\n\n            case 5:\n              data = _context.sent;\n              setPosts(data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchAPI() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchAPI();\n  }, []);\n  return __jsx(React.Fragment, null, posts.map(function (repo) {\n    return __jsx(\"h1\", {\n      key: repo.id\n    }, repo.name);\n  }), __jsx(\"h1\", null, \"Hello World\"));\n}\n\n_s(Home, \"OIhgeEFa0V+OgeTUaYZ+FGUzJdE=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Danielle/Desktop/react-next/pages/Home/index.js"],"names":["React","useState","useEffect","Home","posts","setPosts","handleTopo","window","scrollY","console","log","addEventListener","removeEventListener","fetchAPI","fetch","res","json","data","map","repo","id","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAAA,kBACUF,QAAQ,CAAC,EAAD,CADlB;AAAA,MACTG,KADS;AAAA,MACFC,QADE;;AAIhB,WAASC,UAAT,GAAsB;AACpB,QAAGC,MAAM,CAACC,OAAP,GAAiB,GAApB,EAAyB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,KAFD,MAEO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AACF;;AAEDR,EAAAA,SAAS,CAAC,YAAM;AACZK,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkCL,UAAU,EAA5C;AACA,WAAO,YAAM;AACXG,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAH,MAAAA,MAAM,CAACK,mBAAP,CAA2B,QAA3B;AACD,KAHD;AAIH,GANQ,EAMN,EANM,CAAT;AAQAV,EAAAA,SAAS,CAAC,YAAM,CAEf,CAFQ,EAEN,EAFM,CAAT;;AAKA,MAAMW,QAAQ;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACGC,KAAK,CAAC,8CAAD,CADR;;AAAA;AACTC,cAAAA,GADS;AAAA;AAAA,qBAEIA,GAAG,CAACC,IAAJ,EAFJ;;AAAA;AAETC,cAAAA,IAFS;AAGfZ,cAAAA,QAAQ,CAACY,IAAD,CAAR;;AAHe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARJ,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAMAX,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAIE,SACE,4BACCT,KAAK,CAACc,GAAN,CAAU,UAAAC,IAAI;AAAA,WACX;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC;AAAd,OAAmBD,IAAI,CAACE,IAAxB,CADW;AAAA,GAAd,CADD,EAII,gCAJJ,CADF;AAQD;;GA3CQlB,I;;KAAAA,I;AA6CT,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nfunction Home() {\r\nconst [posts, setPosts] = useState([]);\r\n\r\n\r\nfunction handleTopo() {\r\n  if(window.scrollY > 200) {\r\n    console.log('open');\r\n  } else {\r\n    console.log('close');\r\n  }\r\n}\r\n\r\nuseEffect(() => {\r\n    window.addEventListener('scroll', handleTopo());\r\n    return () => {\r\n      console.log('unMount')\r\n      window.removeEventListener('scroll')\r\n    }\r\n}, [])\r\n\r\nuseEffect(() => {\r\n\r\n}, [])\r\n\r\n\r\nconst fetchAPI = async () => {\r\n  const res = await fetch(\"https://api.github.com/orgs/rocketseat/repos\")\r\n  const data = await res.json();\r\n  setPosts(data);\r\n} \r\n\r\nuseEffect(() => {\r\n  fetchAPI();\r\n}, []);\r\n\r\n  return (\r\n    <>\r\n    {posts.map(repo => (\r\n        <h1 key={repo.id}>{repo.name}</h1>\r\n      ))}\r\n        <h1>Hello World</h1>\r\n    </>\r\n);\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}