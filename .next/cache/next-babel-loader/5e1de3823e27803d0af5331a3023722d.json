{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport fetch from \"isomorphic-unfetch\";\nimport { Route, Link, Switch } from \"react-router-dom\";\nimport { Redirect } from 'react-router';\n\nfunction Status({\n  code,\n  children\n}) {\n  return __jsx(Route, {\n    render: ({\n      staticContext\n    }) => {\n      if (staticContext) staticContext.status = code;\n      return children;\n    }\n  });\n}\n\nconst Home = ({\n  posts\n}) => __jsx(React.Fragment, null, posts.map(repo => __jsx(\"h1\", {\n  key: repo.id\n}, repo.name)));\n\nfunction Users() {\n  return __jsx(\"h2\", null, \"Users\");\n}\n\nfunction NotFound() {\n  return __jsx(React.Fragment, null, __jsx(Status, {\n    code: 404\n  }), __jsx(\"h2\", null, \"Not found\"), \";\");\n}\n\nfunction App() {\n  return __jsx(\"div\", null, __jsx(\"h1\", null, \"Welcome to Next.js!\"), __jsx(\"nav\", null, __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(Link, {\n    to: \"/\"\n  }, \"Home\")), __jsx(\"li\", null, __jsx(Link, {\n    to: \"/about/\"\n  }, \"About\")), __jsx(\"li\", null, __jsx(Link, {\n    to: \"/users/\"\n  }, \"Users\")), __jsx(\"li\", null, __jsx(Link, {\n    to: \"/people/\"\n  }, \"People\")))), __jsx(Switch, null, __jsx(Route, {\n    path: \"/\",\n    exact: true,\n    component: Index\n  }), __jsx(Route, {\n    path: \"/users/\",\n    component: Users\n  }), __jsx(Redirect, {\n    from: \"/people/\",\n    to: \"/users/\"\n  }), __jsx(Route, {\n    component: NotFound\n  })));\n} // This gets called on every request\n\n\nexport async function getServerSideProps() {\n  // Fetch data from external API\n  const res = await fetch(`https://api.github.com/orgs/rocketseat/repos`);\n  const posts = await res.json(); // Pass data to the page via props\n\n  return {\n    props: {\n      posts\n    }\n  };\n}\nexport default App;","map":{"version":3,"sources":["C:/Users/Danielle/Desktop/react-next/pages/index.js"],"names":["React","useEffect","fetch","Route","Link","Switch","Redirect","Status","code","children","staticContext","status","Home","posts","map","repo","id","name","Users","NotFound","App","Index","getServerSideProps","res","json","props"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,kBAApC;AACA,SAASC,QAAT,QAAyB,cAAzB;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAhB,EAAoC;AAClC,SACE,MAAC,KAAD;AACE,IAAA,MAAM,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAuB;AAC7B,UAAIA,aAAJ,EAAmBA,aAAa,CAACC,MAAd,GAAuBH,IAAvB;AACnB,aAAOC,QAAP;AACD;AAJH,IADF;AAQD;;AAGD,MAAMG,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACX,4BACEA,KAAK,CAACC,GAAN,CAAUC,IAAI,IACV;AAAI,EAAA,GAAG,EAAEA,IAAI,CAACC;AAAd,GAAmBD,IAAI,CAACE,IAAxB,CADJ,CADF,CADF;;AASA,SAASC,KAAT,GAAiB;AACf,SAAO,0BAAP;AACD;;AAED,SAASC,QAAT,GAAoB;AAClB,SACE,4BACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAE;AAAd,IADF,EAEE,8BAFF,MADF;AAMD;;AAED,SAASC,GAAT,GAAe;AACb,SACE,mBACE,wCADF,EAEE,mBACE,kBACE,kBACE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAC;AAAT,YADF,CADF,EAIE,kBACE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAC;AAAT,aADF,CAJF,EAOE,kBACE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAC;AAAT,aADF,CAPF,EAUE,kBACE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAC;AAAT,cADF,CAVF,CADF,CAFF,EAmBE,MAAC,MAAD,QACE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,MAArB;AAAsB,IAAA,SAAS,EAAEC;AAAjC,IADF,EAGE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,SAAS,EAAEH;AAAjC,IAHF,EAIE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAC,UAAf;AAA0B,IAAA,EAAE,EAAC;AAA7B,IAJF,EAKE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAEC;AAAlB,IALF,CAnBF,CADF;AA6BD,C,CAEC;;;AACA,OAAO,eAAeG,kBAAf,GAAoC;AACzC;AACA,QAAMC,GAAG,GAAG,MAAMrB,KAAK,CAAE,8CAAF,CAAvB;AACA,QAAMW,KAAK,GAAG,MAAMU,GAAG,CAACC,IAAJ,EAApB,CAHyC,CAKzC;;AACA,SAAO;AAAEC,IAAAA,KAAK,EAAE;AAAEZ,MAAAA;AAAF;AAAT,GAAP;AACD;AAGH,eAAeO,GAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport { Route, Link, Switch } from \"react-router-dom\";\r\nimport { Redirect } from 'react-router'\r\n \r\nfunction Status({ code, children }) {\r\n  return (\r\n    <Route\r\n      render={({ staticContext }) => {\r\n        if (staticContext) staticContext.status = code;\r\n        return children;\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\n\r\nconst Home = ({ posts }) => (\r\n  <>\r\n   {posts.map(repo => (\r\n        <h1 key={repo.id}>{repo.name}</h1>\r\n      ))}\r\n  </>\r\n);\r\n\r\n\r\nfunction Users() {\r\n  return <h2>Users</h2>;\r\n}\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <>\r\n      <Status code={404}/>\r\n      <h2>Not found</h2>;\r\n    </>\r\n  )\r\n}\r\n\r\nfunction App() {\r\n  return(\r\n    <div>\r\n      <h1>Welcome to Next.js!</h1>\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/about/\">About</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/users/\">Users</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/people/\">People</Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Index} />\r\n\r\n        <Route path=\"/users/\" component={Users} />\r\n        <Redirect from=\"/people/\" to=\"/users/\" />\r\n        <Route component={NotFound}/>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\n  // This gets called on every request\r\n  export async function getServerSideProps() {\r\n    // Fetch data from external API\r\n    const res = await fetch(`https://api.github.com/orgs/rocketseat/repos`)\r\n    const posts = await res.json()\r\n  \r\n    // Pass data to the page via props\r\n    return { props: { posts } }\r\n  }\r\n  \r\n\r\nexport default App;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}