{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Routes from './routes';\nimport Routes2 from './routes2';\nimport fetch from \"isomorphic-unfetch\";\n\nfunction App(_ref) {\n  var posts = _ref.posts;\n  return __jsx(React.Fragment, null, __jsx(Routes, null), __jsx(\"h1\", null, \"Api\"), posts.map(function (repo) {\n    return __jsx(\"h1\", {\n      key: repo.id\n    }, repo.name);\n  }));\n}\n\n_c = App;\nApp.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var news, res;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return fetch(\"https://api.github.com/orgs/rocketseat/repos\");\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return res.json();\n\n        case 6:\n          news = _context.sent;\n          console.log(news);\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(\"ERROR\", _context.t0);\n          news = [];\n\n        case 14:\n          return _context.abrupt(\"return\", {\n            posts: news\n          });\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, null, [[0, 10]]);\n}));\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Danielle/Desktop/react-next/pages/index.js"],"names":["React","useEffect","Routes","Routes2","fetch","App","posts","map","repo","id","name","getInitialProps","res","json","news","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,SAASC,GAAT,OAAsB;AAAA,MAARC,KAAQ,QAARA,KAAQ;AAEpB,SACE,4BACA,MAAC,MAAD,OADA,EAEE,wBAFF,EAGGA,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI;AAAA,WACX;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC;AAAd,OAAmBD,IAAI,CAACE,IAAxB,CADW;AAAA,GAAd,CAHH,CADF;AAUC;;KAZML,G;AAcPA,GAAG,CAACM,eAAJ,yEAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAGEP,KAAK,gDAHP;;AAAA;AAGVQ,UAAAA,GAHU;AAAA;AAAA,iBAMHA,GAAG,CAACC,IAAJ,EANG;;AAAA;AAMhBC,UAAAA,IANgB;AAOhBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAPgB;AAAA;;AAAA;AAAA;AAAA;AAShBC,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAF,UAAAA,IAAI,GAAG,EAAP;;AAVgB;AAAA,2CAYb;AACHR,YAAAA,KAAK,EAAEQ;AADJ,WAZa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;AAiBF,eAAeT,GAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport Routes from './routes';\r\nimport Routes2 from './routes2';\r\nimport fetch from \"isomorphic-unfetch\";\r\n\r\nfunction App({posts}) {\r\n   \r\n  return (\r\n    <>\r\n    <Routes />\r\n      <h1>Api</h1>\r\n      {posts.map(repo => (\r\n          <h1 key={repo.id}>{repo.name}</h1>\r\n        ))}\r\n    </>\r\n    \r\n  );\r\n  }\r\n  \r\n  App.getInitialProps = async () => {\r\n    let news;\r\n    try {\r\n        const res = await fetch(\r\n            `https://api.github.com/orgs/rocketseat/repos`\r\n        );\r\n        news = await res.json();\r\n        console.log(news);\r\n    } catch (err) {\r\n        console.log(\"ERROR\", err);\r\n        news = [];\r\n    }\r\n    return {\r\n        posts: news\r\n    };\r\n  };\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}